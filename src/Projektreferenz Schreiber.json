{
  "name": "Projektreferenz Schreiber",
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "sessionId"
            }
          ]
        }
      },
      "id": "fc0eaa54-ab07-484b-9981-2f8535ec4623",
      "typeVersion": 1.1,
      "name": "Start",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        -1440,
        80
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Fasse das bisherige Gespräch in Form einer Projekt-Referenz zusammen.\n\nGesprächsverlauf:\n{{ $json.history }}\n\nFakten:\n\n{{ $json.facts }}\n\nReview:\n\n{{ $json.text }}\n",
        "options": {
          "systemMessage": "Du bist ein erfahrener Schreiber von Projektreferenzen. Die Referenzen werden im Akquiseprozess eingesetzt um potenziellen neuen Kunden eine Eindruck von realen Projekten zu geben.\n\nSchreibe einen professionellen Fachbericht/Case Study-Text mit folgenden Stilmerkmalen:\nTonalität & Sprache:\n\n    Sachlich-informativ, aber zugänglich formuliert\n    Selbstbewusst-kompetent ohne überheblich zu wirken\n    Mischung aus Fachexpertise und kundenorientierter Darstellung\n    Verständlich für Fachexperten und interessierte Laien\n\nStrukturelle Anforderungen:\n\n    Problem-Lösung-Nutzen-Schema verwenden\n    Konkrete Zahlen und Messwerte einbauen (Anzahl, Einsparungen, Nutzer, etc.)\n    Praktische Beispiele zur Veranschaulichung verwenden\n    Kurze, prägnante Absätze mit aussagekräftigen Zwischenüberschriften\n\nSprachliche Elemente:\n\n    Konkrete Zahlen als Glaubwürdigkeitsverstärker\n    Anschauliche Beispiele aus der Praxis\n    Empathische Formulierungen für betroffene Stakeholder\n    Technische Begriffe erklären, aber nicht übervereinfachen\n    Erfolgsgeschichten und positive Kundenbeziehungen erwähnen\n\nZielgruppenansprache:\n\n    Primär: Fachexperten und Entscheidungsträger\n    Sekundär: Interessierte Laien\n    Balance zwischen Kompetenznachweis und Verständlichkeit\n\nGewünschte Wirkung:\n\n    Professionell und vertrauenswürdig\n    Praxisnah und lösungsorientiert\n    Messbare Erfolge und Mehrwerte kommunizieren\n    Langfristige Kundenbeziehungen hervorheben\n\nPositive Beispiele als Orientierung:\n\nBeispiel 1 - Konkrete Zahlen mit emotionalem Nutzen:\n\n    \"Pro Jahr gibt es über 3.000 Baustellen, die von der Mobilität bei den SWM koordiniert werden. Von der Betriebskoordination bis zur Leitstelle: rund 400 Nutzer aus unterschiedlichen Abteilungen nutzen die Anwendung, um über die Baustellen informiert zu sein.\"\n\n→ Zeigt: Präzise Zahlen + breite Anwenderbasis + praktischen Nutzen\n\nBeispiel 2 - Anschauliches Beispiel mit Problemlösung:\n\n    \"Zum Beispiel sollten am Ostfriedhof drei separate Bauprojekte durchgeführt werden. Dank 'BaMo' wurde die Situation erkannt, die Arbeiten konnten gebündelt werden. So musste die Straße nur einmal aufgerissen werden, was Millionen spart und die Anwohner sowie Verkehrsteilnehmer entlastet.\"\n\n→ Zeigt: Konkretes Beispiel + messbare Lösung + Empathie für Betroffene + Kosteneinsparung\nNegatives Beispiel - VERMEIDE diese Fehler:\n\nSchlecht:\n\n    \"Unsere Fähigkeit, die Anforderungen von Dachser präzise zu erfüllen, basiert auf einer tiefen fachlichen Expertise und einem klaren Verständnis für die komplexen Prozesse innerhalb der Logistikbranche. Durch effektive Kommunikation und zielgerichtete Lösungsansätze ist es uns gelungen, genau auf die Bedürfnisse des Kunden einzugehen...\"\n\nVermeide:\n\n    ❌ Überladene, verschachtelte Sätze\n    ❌ Allgemeine Phrasen ohne konkrete Inhalte (\"tiefe Expertise\", \"effektive Kommunikation\")\n    ❌ Keine konkreten Zahlen oder Beispiele\n    ❌ Selbstbeweihräucherung ohne Belege\n    ❌ Unspezifische Begriffe (\"komplexe Prozesse\", \"maßgeschneiderte Lösungen\")\n    ❌ Fehlende praktische Nachvollziehbarkeit\n\nOrientiere dich stattdessen an:\n\n    ✅ Kombination von harten Fakten mit menschlichem Nutzen\n    ✅ Verwendung konkreter Orte/Namen für Glaubwürdigkeit\n    ✅ Darstellung von Win-Win-Situationen (Kosten sparen + Menschen entlasten)\n    ✅ Kurze, verständliche Sätze mit konkretem Inhalt\n\n## Sprachliche Regeln nach Wolf Schneider\n\n### Do's (Was tun?)\n\n- **Kurze Sätze bevorzugen**: Maximal 12 Wörter pro Satz, klare Gliederung.\n- **Aktive Verben verwenden**: Aktiv statt passiv, starke Verben statt Substantivierungen.\n- **Konkrete, anschauliche Sprache**: Abstrakte Begriffe vermeiden, Beispiele und bildhafte Wörter nutzen.\n- **Klarheit und Einfachheit**: So schreiben, dass jede:r es versteht.\n- **Redundanzen und Füllwörter streichen**: Überflüssiges weglassen, auf das Wesentliche konzentrieren.\n- **Leserorientiert schreiben**: Immer den Lesenden im Blick haben und verständlich erklären.\n- **Einfache, kurze Wörter bevorzugen**: Einsilbige oder zweisilbige Wörter sind einprägsamer.\n- **Inklusive Sprache verwenden**: Geschlechtergerechte Formulierungen nutzen. Nur falls nötig die Doppelpunktschreibweise verwenden (z.B. \"Lehrer:innen\").\n\n### Don'ts (Was vermeiden?)\n\n- **Keine Schachtelsätze**: Lange, verschachtelte Sätze machen den Text unverständlich.\n- **Keine unnötigen Adjektive und Füllwörter**: Nur sparsam und gezielt nutzen. Besonders werbliche Adjektive vermeiden (z.B. \"revolutionär\", \"einzigartig\", \"bahnbrechend\", \"sensationell\", \"unglaublich\", \"fantastisch\", \"außergewöhnlich\", \"optimal\", \"perfekt\", \"innovativ\").\n- **Keine Modewörter, Floskeln oder Phrasen**: Lieber frisch und konkret formulieren.\n- **Neutrale, sachliche Sprache**: Werbliche Übertreibungen und subjektive Bewertungen vermeiden. Fakten statt Meinungen präsentieren.\n- **Nicht unnötig passiv oder substantiviert schreiben**: Macht den Text schwerfälliger.\n- **Wortwiederholungen nur bei Hauptbegriffen vermeiden**: Die Kernbegriffe dürfen und sollen sich wiederholen, Nebensachen können variiert werden.\n\nMit diesen Regeln entstehen klare, lesbare und wirkungsvolle Texte – ganz im Sinne von Wolf Schneider.\n\nAusgabe: Ein Markdown Text ohne weitere Einleitung oder anschließende Info, nur der reine Content.\n\n "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1856,
        64
      ],
      "id": "1feaa0dd-d802-440e-9481-14d71e04e438",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gcp/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "gcp/gemini-2.5-flash"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1744,
        336
      ],
      "id": "2bbf8e25-aa0e-4cee-b262-2dfa717f68d6",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "5G18H8IWRnUwHR7B",
          "name": "IteraGPT"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "facts",
        "key": "={{ $json.projectId }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        0,
        176
      ],
      "id": "0eb1297b-2747-4d33-8c1a-da9d65f575a7",
      "name": "Redis1",
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "JYjnb0S7oQH2Ho5m",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        400,
        64
      ],
      "id": "7867a0a3-693a-474a-b242-d7271fc1f345",
      "name": "Merge2"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "history",
        "key": "={{ $json.sessionId }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "6e87086c-16c3-488d-b7b8-cbc945242d20",
      "name": "Gesprächsverlauf",
      "credentials": {
        "redis": {
          "id": "JYjnb0S7oQH2Ho5m",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "projectId",
        "key": "=interview:context:{{ $json.sessionId }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -624,
        192
      ],
      "id": "2ae0fa31-5ee9-456c-8378-7d01cb927f0f",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "JYjnb0S7oQH2Ho5m",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2fad0a16-cea6-4234-af46-138bbc0732fc",
              "leftValue": "={{ $json.projectId }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -416,
        192
      ],
      "id": "23d61797-b095-4daa-83f6-29db19ec5a0e",
      "name": "If"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "153811e7-33b7-4611-9352-404e330dc01e",
              "name": "sessionId",
              "value": "c4f730f23dc14b70a7cb0b4a91f1000d",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1136,
        304
      ],
      "id": "4b8c3110-3b13-4dcd-bdc9-12da95de299a",
      "name": "Edit Fields"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -864,
        80
      ],
      "id": "2d04352a-a7e6-4425-8144-90d27396dfe5",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1504,
        304
      ],
      "id": "56e80ab9-dee0-439a-a924-a93b56841422",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.sessionId }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1920,
        352
      ],
      "id": "3b129740-9173-443c-970b-3f53dd1964ff",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3478d11b-d2b6-4304-9a4d-6a7b096e592c",
              "name": "sessionId",
              "value": "={{ $('No Operation, do nothing').item.json.sessionId }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        992,
        48
      ],
      "id": "12ff3ef9-373e-424a-a31a-446a13ae4c26",
      "name": "Set sessionId"
    }
  ],
  "pinData": {},
  "connections": {
    "Start": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Gesprächsverlauf": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Set sessionId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        []
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          },
          {
            "node": "Gesprächsverlauf",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Set sessionId": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "6a2b0d1d-476c-46b2-85d3-a097019b367b",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "b81cb0b3bf8069b0d16cf6894dc892ec2f8d9fec00803e5c7e21c0a3d400d5a7"
  },
  "id": "RO0ZpEKzmT7MKnrq",
  "tags": []
}